<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= titulo %></title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        /* Estilos para a navegação de abas */
        .tab-button {
            @apply px-6 py-3 text-sm font-semibold text-gray-700 bg-white rounded-lg shadow-sm border border-gray-200
                   hover:text-blue-600 hover:border-blue-400 hover:bg-blue-50 transition-all duration-300 ease-in-out;
            white-space: nowrap;
            margin-right: 0.75rem;
            margin-bottom: 0.5rem;
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .tab-button.active {
            @apply bg-blue-600 text-white border-blue-600 shadow-md;
        }

        .tab-content {
            @apply p-6 bg-white rounded-lg shadow-md mt-4;
        }

        .hidden {
            display: none;
        }

        /* Estilo para modais */
        .modal {
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.4);
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background-color: #fefefe;
            margin: auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            border-radius: 8px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .close-button {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
        }

        .close-button:hover,
        .close-button:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
    </style>
</head>
<body class="bg-gray-100 font-sans leading-normal tracking-normal">

    <%- include('../partials/sidebar_superadmin') %>

    <div class="ml-auto lg:w-4/5 p-8">
        <% if (success_msg && success_msg.length > 0) { %>
            <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
                <span class="block sm:inline"><%= success_msg %></span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3 cursor-pointer" onclick="this.parentElement.style.display='none';">
                    <svg class="fill-current h-6 w-6 text-green-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.15a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.15 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                </span>
            </div>
        <% } %>
        <% if (error_msg && error_msg.length > 0) { %>
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <span class="block sm:inline"><%= error_msg %></span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3 cursor-pointer" onclick="this.parentElement.style.display='none';">
                    <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.15a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.15 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                </span>
            </div>
        <% } %>
        <% if (error && error.length > 0) { %>
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                <span class="block sm:inline"><%= error %></span>
                <span class="absolute top-0 bottom-0 right-0 px-4 py-3 cursor-pointer" onclick="this.parentElement.style.display='none';">
                    <svg class="fill-current h-6 w-6 text-red-500" role="button" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><title>Close</title><path d="M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.15a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.15 2.758 3.15a1.2 1.2 0 0 1 0 1.698z"/></svg>
                </span>
            </div>
        <% } %>

        <h1 class="text-3xl font-bold text-gray-800 mb-6">Dashboard do Super Admin</h1>

        <div class="flex flex-wrap border-b border-gray-200">
            <button class="tab-button <%= activeTab === 'visao-geral' ? 'active' : '' %>" onclick="showTab(event, 'visao-geral')" data-tab-name="visao-geral">Visão Geral</button>
            <button class="tab-button <%= activeTab === 'gerenciar-escolas' ? 'active' : '' %>" onclick="showTab(event, 'gerenciar-escolas')" data-tab-name="gerenciar-escolas">Gerenciar Escolas</button>
            <button class="tab-button <%= activeTab === 'solicitacoes' ? 'active' : '' %>" onclick="showTab(event, 'solicitacoes')" data-tab-name="solicitacoes">Solicitações</button>
            <button class="tab-button <%= activeTab === 'projetos-sem-avaliacao' ? 'active' : '' %>" onclick="showTab(event, 'projetos-sem-avaliacao')" data-tab-name="projetos-sem-avaliacao">Projetos Sem Avaliação</button>
            <button class="tab-button <%= activeTab === 'ranking-projetos' ? 'active' : '' %>" onclick="showTab(event, 'ranking-projetos')" data-tab-name="ranking-projetos">Ranking de Projetos</button>
            <button class="tab-button <%= activeTab === 'resumo-avaliadores' ? 'active' : '' %>" onclick="showTab(event, 'resumo-avaliadores')" data-tab-name="resumo-avaliadores">Resumo Avaliadores</button>
            </div>

        <div id="visao-geral" class="tab-content <%= activeTab === 'visao-geral' ? '' : 'hidden' %>">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Visão Geral</h2>
            <div id="visao-geral-data-container" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800">Total de Escolas</h3>
                    <p id="totalEscolasDisplay" class="text-3xl font-bold text-blue-600 mt-2">0</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800">Total de Administradores</h3>
                    <p id="totalAdminsDisplay" class="text-3xl font-bold text-green-600 mt-2">0</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800">Total de Avaliadores</h3>
                    <p id="totalAvaliadoresDisplay" class="text-3xl font-bold text-purple-600 mt-2">0</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800">Total de Projetos</h3>
                    <p id="totalProjetosDisplay" class="text-3xl font-bold text-yellow-600 mt-2">0</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800">Total de Avaliações</h3>
                    <p id="totalAvaliacoesDisplay" class="text-3xl font-bold text-teal-600 mt-2">0</p>
                </div>
                <div class="bg-white p-6 rounded-lg shadow-md">
                    <h3 class="text-lg font-semibold text-gray-800">Solicitações Pendentes</h3>
                    <p id="totalSolicitacoesPendentesDisplay" class="text-3xl font-bold text-red-600 mt-2">0</p>
                </div>
            </div>
        </div>

        <div id="gerenciar-escolas" class="tab-content <%= activeTab === 'gerenciar-escolas' ? '' : 'hidden' %>">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Gerenciar Escolas</h2>
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome da Escola</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">E-mail de Contato</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">E-mail do Admin</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Data de Cadastro</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
                        </tr>
                    </thead>
                    <tbody id="tabela-escolas-body" class="bg-white divide-y divide-gray-200">
                        </tbody>
                </table>
            </div>
            <div class="mt-6 flex justify-end">
                <a href="/superadmin/escolas/nova" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg flex items-center">
                    <i class="fas fa-plus-circle mr-2"></i> Adicionar Nova Escola
                </a>
            </div>
        </div>

        <div id="solicitacoes" class="tab-content <%= activeTab === 'solicitacoes' ? '' : 'hidden' %>">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Solicitações de Acesso</h2>
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome da Escola</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">E-mail de Contato</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Data da Solicitação</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
                        </tr>
                    </thead>
                    <tbody id="tabela-solicitacoes-body" class="bg-white divide-y divide-gray-200">
                        </tbody>
                </table>
            </div>
        </div>

        <div id="projetos-sem-avaliacao" class="tab-content <%= activeTab === 'projetos-sem-avaliacao' ? '' : 'hidden' %>">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Projetos Sem Avaliação</h2>
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título do Projeto</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Escola</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Autores</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ações</th>
                        </tr>
                    </thead>
                    <tbody id="tabela-projetos-sem-avaliacao-body" class="bg-white divide-y divide-gray-200">
                        </tbody>
                </table>
            </div>
        </div>

        <div id="ranking-projetos" class="tab-content <%= activeTab === 'ranking-projetos' ? '' : 'hidden' %>">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Ranking de Projetos</h2>
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Posição</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Título do Projeto</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Escola</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Média Final</th>
                        </tr>
                    </thead>
                    <tbody id="tabela-ranking-projetos-body" class="bg-white divide-y divide-gray-200">
                        </tbody>
                </table>
            </div>
        </div>

        <div id="resumo-avaliadores" class="tab-content <%= activeTab === 'resumo-avaliadores' ? '' : 'hidden' %>">
            <h2 class="text-2xl font-bold text-gray-800 mb-6">Resumo de Avaliadores</h2>
            <div class="bg-white shadow-md rounded-lg overflow-hidden">
                <table class="min-w-full divide-y divide-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Nome do Avaliador</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">E-mail</th>
                            <th scope="col" class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Avaliações Realizadas</th>
                        </tr>
                    </thead>
                    <tbody id="tabela-resumo-avaliadores-body" class="bg-white divide-y divide-gray-200">
                        </tbody>
                </table>
            </div>
        </div>

        <div id="resetAdminPasswordModal" class="modal hidden">
            <div class="modal-content">
                <span class="close-button" onclick="closeResetAdminPasswordModal()">&times;</span>
                <h3 class="text-xl font-bold mb-4">Resetar Senha do Administrador</h3>
                <p class="mb-4">Tem certeza que deseja resetar a senha do administrador da escola "<strong id="escolaNomeReset"></strong>"?</p>
                <p class="mb-4">Uma nova senha temporária será gerada e enviada para o e-mail: <strong id="adminEmailReset"></strong></p>
                <form id="resetAdminPasswordForm" method="POST" action="">
                    <button type="submit" class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-2 px-4 rounded mr-2">Confirmar Reset</button>
                    <button type="button" onclick="closeResetAdminPasswordModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Cancelar</button>
                </form>
            </div>
        </div>

        <div id="deleteEscolaModal" class="modal hidden">
            <div class="modal-content">
                <span class="close-button" onclick="closeDeleteEscolaModal()">&times;</span>
                <h3 class="text-xl font-bold mb-4">Confirmar Deleção de Escola</h3>
                <p class="mb-4">Você tem certeza que deseja deletar a escola "<strong id="escolaNomeDelete"></strong>"?</p>
                <p class="text-red-600 mb-4">Esta ação é irreversível e também removerá o administrador associado, projetos e avaliações.</p>
                <form id="deleteEscolaForm" method="POST" action="">
                    <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded mr-2">Confirmar Deleção</button>
                    <button type="button" onclick="closeDeleteEscolaModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Cancelar</button>
                </form>
            </div>
        </div>

    </div>

    <script>
        // Função principal para mostrar a aba e carregar seus dados
        async function showTab(event, tabName) {
            // Remover a classe 'active' de todos os botões e 'hidden' de todas as abas
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('active');
            });
            document.querySelectorAll('.tab-content').forEach(tabContent => {
                tabContent.classList.add('hidden');
            });

            // Adicionar a classe 'active' ao botão clicado
            // Use event.currentTarget para o clique, ou querySelector para inicialização
            const clickedButton = event ? event.currentTarget : document.querySelector(`.tab-button[data-tab-name="${tabName}"]`);
            if (clickedButton) {
                clickedButton.classList.add('active');
            }

            // Atualizar a URL no navegador (sem recarregar a página)
            const url = new URL(window.location);
            url.searchParams.set('tab', tabName);
            window.history.pushState({}, '', url);

            // Exibir o conteúdo da aba (o container geral da aba)
            const currentTabContentDiv = document.getElementById(tabName);
            if (currentTabContentDiv) {
                currentTabContentDiv.classList.remove('hidden');
                // CHAMA A FUNÇÃO PARA CARREGAR OS DADOS DINAMICAMENTE
                await loadTabData(tabName); // Use await aqui para garantir que carregue antes de continuar, se necessário
            }
        }

        // Função para carregar os dados de uma aba específica via Fetch API
        async function loadTabData(tabName) {
            let apiUrl = '';
            let targetElementId = ''; // O ID do elemento DENTRO da aba onde os dados serão inseridos

            // Mapear o nome da aba para a URL da API e o ID do elemento de destino
            switch (tabName) {
                case 'visao-geral':
                    apiUrl = '/superadmin/api/dashboard/visao-geral';
                    targetElementId = 'visao-geral-data-container'; // ID de um div que conterá os cards da visão geral
                    break;
                case 'gerenciar-escolas':
                    apiUrl = '/superadmin/api/dashboard/gerenciar-escolas';
                    targetElementId = 'tabela-escolas-body'; // ID do <tbody> da sua tabela de escolas
                    break;
                case 'solicitacoes':
                    apiUrl = '/superadmin/api/dashboard/solicitacoes';
                    targetElementId = 'tabela-solicitacoes-body'; // ID do <tbody> da sua tabela de solicitações
                    break;
                case 'projetos-sem-avaliacao':
                    apiUrl = '/superadmin/api/dashboard/projetos-sem-avaliacao';
                    targetElementId = 'tabela-projetos-sem-avaliacao-body';
                    break;
                case 'ranking-projetos':
                    apiUrl = '/superadmin/api/dashboard/ranking-projetos';
                    targetElementId = 'tabela-ranking-projetos-body';
                    break;
                case 'resumo-avaliadores':
                    apiUrl = '/superadmin/api/dashboard/resumo-avaliadores';
                    targetElementId = 'tabela-resumo-avaliadores-body';
                    break;
                default:
                    console.warn('Aba desconhecida ou sem API configurada:', tabName);
                    return; // Sai da função se a aba não tiver API correspondente
            }

            const targetElement = document.getElementById(targetElementId);
            if (!targetElement) {
                console.error(`Elemento de destino não encontrado para a aba ${tabName}: #${targetElementId}`);
                return;
            }

            try {
                // Adicionar um spinner ou mensagem de carregamento enquanto os dados são buscados
                targetElement.innerHTML = '<div class="text-center py-4 text-gray-500"><i class="fas fa-spinner fa-spin text-blue-500 text-2xl"></i> Carregando dados...</div>';

                const response = await fetch(apiUrl);
                if (!response.ok) {
                    // Se a resposta não for OK (status 4xx ou 5xx)
                    throw new Error(`Erro HTTP! Status: ${response.status}`);
                }
                const data = await response.json(); // Converte a resposta para JSON

                // Renderiza os dados no HTML da aba
                renderDataIntoTab(tabName, data, targetElement);

            } catch (error) {
                console.error(`Erro ao carregar dados da aba ${tabName}:`, error);
                targetElement.innerHTML = `<div class="text-red-500 text-center py-4">Ocorreu um erro ao carregar os dados: ${error.message}</div>`;
            }
        }

        // Função para renderizar (inserir) os dados recebidos da API no HTML da aba
        function renderDataIntoTab(tabName, data, targetElement) {
            if (!targetElement) return;

            switch (tabName) {
                case 'visao-geral':
                    // Atualiza os valores dos cards na Visão Geral
                    document.getElementById('totalEscolasDisplay').innerText = data.totalEscolas;
                    document.getElementById('totalAdminsDisplay').innerText = data.totalAdmins;
                    document.getElementById('totalAvaliadoresDisplay').innerText = data.totalAvaliadores;
                    document.getElementById('totalProjetosDisplay').innerText = data.totalProjetos;
                    document.getElementById('totalAvaliacoesDisplay').innerText = data.totalAvaliacoes;
                    document.getElementById('totalSolicitacoesPendentesDisplay').innerText = data.totalSolicitacoesPendentes;
                    // Não precisa limpar innerHTML do targetElement se estiver atualizando spans/parágrafos específicos
                    break;
                case 'gerenciar-escolas':
                    let escolasHtml = '';
                    if (data.length === 0) {
                        escolasHtml = '<tr><td colspan="6" class="px-6 py-4 whitespace-nowrap text-center text-gray-500">Nenhuma escola cadastrada.</td></tr>';
                    } else {
                        data.forEach(escola => {
                            escolasHtml += `
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">${escola.nome}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${escola.emailContato || 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${escola.admin ? escola.admin.email : 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${escola.dataCadastro ? new Date(escola.dataCadastro).toLocaleDateString('pt-BR') : 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center space-x-2">
                                            <a href="/superadmin/escolas/${escola._id}/detalhes" class="text-blue-600 hover:text-blue-900" title="Ver Detalhes"><i class="fas fa-eye"></i></a>
                                            <button type="button" onclick="confirmDeleteEscola('${escola._id}', '${escola.nome}')" class="text-red-600 hover:text-red-900" title="Deletar Escola"><i class="fas fa-trash-alt"></i></button>
                                            <button type="button" onclick="confirmResetAdminPassword('${escola._id}', '${escola.nome}', '${escola.admin ? escola.admin.email : ''}')" class="text-yellow-600 hover:text-yellow-900" title="Resetar Senha Admin"><i class="fas fa-key"></i></button>
                                        </div>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                    targetElement.innerHTML = escolasHtml; // Insere o HTML gerado no tbody da tabela
                    break;
                case 'solicitacoes':
                    let solicitacoesHtml = '';
                    if (data.length === 0) {
                        solicitacoesHtml = '<tr><td colspan="5" class="px-6 py-4 whitespace-nowrap text-center text-gray-500">Nenhuma solicitação pendente.</td></tr>';
                    } else {
                        data.forEach(solicitacao => {
                            solicitacoesHtml += `
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">${solicitacao.nomeEscola}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${solicitacao.emailContato}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${new Date(solicitacao.dataSolicitacao).toLocaleDateString('pt-BR')}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${solicitacao.status}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <div class="flex items-center space-x-2">
                                            <button type="button" onclick="confirmarAprovacao('${solicitacao._id}', '${solicitacao.nomeEscola}', '${solicitacao.emailContato}')" class="text-green-600 hover:text-green-900" title="Aprovar"><i class="fas fa-check-circle"></i></button>
                                            <button type="button" onclick="confirmarRejeicao('${solicitacao._id}', '${solicitacao.nomeEscola}', '${solicitacao.emailContato}')" class="text-red-600 hover:text-red-900" title="Rejeitar"><i class="fas fa-times-circle"></i></button>
                                        </div>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                    targetElement.innerHTML = solicitacoesHtml;
                    break;
                // TODO: Adicione as lógicas de renderização para as outras abas aqui (projetos-sem-avaliacao, ranking-projetos, resumo-avaliadores)
                case 'projetos-sem-avaliacao':
                    let projetosSemAvaliacaoHtml = '';
                    if (data.length === 0) {
                        projetosSemAvaliacaoHtml = '<tr><td colspan="4" class="px-6 py-4 whitespace-nowrap text-center text-gray-500">Nenhum projeto sem avaliação.</td></tr>';
                    } else {
                        data.forEach(projeto => {
                            projetosSemAvaliacaoHtml += `
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">${projeto.titulo}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${projeto.escola ? projeto.escola.nome : 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${projeto.autores ? projeto.autores.join(', ') : 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">
                                        <a href="/superadmin/projetos/${projeto._id}/detalhes" class="text-blue-600 hover:text-blue-900" title="Ver Detalhes"><i class="fas fa-eye"></i></a>
                                    </td>
                                </tr>
                            `;
                        });
                    }
                    targetElement.innerHTML = projetosSemAvaliacaoHtml;
                    break;
                case 'ranking-projetos':
                    let rankingHtml = '';
                    if (data.length === 0) {
                        rankingHtml = '<tr><td colspan="4" class="px-6 py-4 whitespace-nowrap text-center text-gray-500">Nenhum projeto no ranking.</td></tr>';
                    } else {
                        data.forEach((item, index) => {
                            rankingHtml += `
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">${index + 1}º</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${item.projeto.titulo}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${item.escola ? item.escola.nome : 'N/A'}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${item.media.toFixed(2)}</td>
                                </tr>
                            `;
                        });
                    }
                    targetElement.innerHTML = rankingHtml;
                    break;
                case 'resumo-avaliadores':
                    let avaliadoresHtml = '';
                    if (data.length === 0) {
                        avaliadoresHtml = '<tr><td colspan="3" class="px-6 py-4 whitespace-nowrap text-center text-gray-500">Nenhum avaliador cadastrado.</td></tr>';
                    } else {
                        data.forEach(avaliador => {
                            avaliadoresHtml += `
                                <tr>
                                    <td class="px-6 py-4 whitespace-nowrap">${avaliador.nome}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${avaliador.email}</td>
                                    <td class="px-6 py-4 whitespace-nowrap">${avaliador.avaliacoesRealizadas}</td>
                                </tr>
                            `;
                        });
                    }
                    targetElement.innerHTML = avaliadoresHtml;
                    break;
            }
        }

        // Inicialização da aba ao carregar a página
        document.addEventListener('DOMContentLoaded', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const initialTab = urlParams.get('tab') || 'visao-geral';
            showTab(null, initialTab); // Carrega a aba inicial e seus dados
        });


        // Funções de Modal (manter as suas existentes)
        function confirmResetAdminPassword(escolaId, escolaNome, adminEmail) {
            const modal = document.getElementById('resetAdminPasswordModal');
            const escolaNomeDisplay = document.getElementById('escolaNomeReset');
            const adminEmailDisplay = document.getElementById('adminEmailReset');
            const form = document.getElementById('resetAdminPasswordForm');

            escolaNomeDisplay.innerText = escolaNome;
            adminEmailDisplay.innerText = adminEmail;
            form.action = `/superadmin/escolas/${escolaId}/reset-admin-password`;
            modal.classList.remove('hidden');
        }

        function closeResetAdminPasswordModal() {
            document.getElementById('resetAdminPasswordModal').classList.add('hidden');
        }

        function confirmDeleteEscola(escolaId, escolaNome) {
            const modal = document.getElementById('deleteEscolaModal');
            const escolaNomeDelete = document.getElementById('escolaNomeDelete');
            const form = document.getElementById('deleteEscolaForm');

            escolaNomeDelete.innerText = escolaNome;
            form.action = `/superadmin/escolas/${escolaId}/deletar`;
            modal.classList.remove('hidden');
        }

        function closeDeleteEscolaModal() {
            document.getElementById('deleteEscolaModal').classList.add('hidden');
        }

        // Funções para aprovação/rejeição de solicitação
        function confirmarAprovacao(solicitacaoId, nomeEscola, emailContato) {
            if (confirm(`Tem certeza que deseja APROVAR a solicitação da escola "${nomeEscola}" (${emailContato})?`)) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/superadmin/solicitacoes/${solicitacaoId}/aprovar`;
                document.body.appendChild(form);
                form.submit();
            }
        }

        function confirmarRejeicao(solicitacaoId, nomeEscola, emailContato) {
            if (confirm(`Tem certeza que deseja REJEITAR a solicitação da escola "${nomeEscola}" (${emailContato})?`)) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = `/superadmin/solicitacoes/${solicitacaoId}/rejeitar`;
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
</body>
</html>
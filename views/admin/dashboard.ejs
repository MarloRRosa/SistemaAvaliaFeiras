<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title><%= titulo %></title>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
  <link rel="stylesheet" href="/css/admin-custom.css">
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/qrious@4.0.2/dist/qrious.min.js"></script>
  <style>
    #projetosAvaliador, #criteriosProjeto {
      max-height: 200px;
      overflow-y: auto;
      border-radius: 0.375rem;
      border-color: #d1d5db;
    }
    .modal-full {
      position: fixed;
      top: 0;
      left: 0;
      width: 100vw;
      height: 100vh;
      z-index: 100;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      align-items: center;
      justify-content: center;
    }
    /* Adicione estilos para o modal do QR Code */
    #qrCodeModal .w-1/3 {
        max-width: 400px; /* Ajusta a largura do modal do QR Code */
    }
    #qrCodeCanvas {
        display: block; /* Garante que o canvas ocupe sua própria linha */
        margin: 0 auto; /* Centraliza o canvas */
    }
  </style>
</head>
<body class="bg-gray-100 font-sans leading-normal tracking-normal">

  <%- include('./partials/admin-header') %>

  <main class="container mx-auto mt-8 p-4">
    <h1 class="text-3xl font-bold text-gray-800 mb-6">Painel Administrativo da Feira</h1>

    <% if (messages.success_msg) { %>
      <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-4" role="alert">
        <%= messages.success_msg %>
      </div>
    <% } %>
    <% if (messages.error_msg) { %>
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-4" role="alert">
        <%= messages.error_msg %>
      </div>
    <% } %>

    <div class="mb-6">
      <div class="border-b border-gray-200">
        <nav class="-mb-px flex space-x-8" aria-label="Tabs">
          <a href="#" class="tab-button <%= activeTab === 'tab-dashboard' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="dashboard-tab" data-tab="tab-dashboard">Dashboard</a>
          <a href="#" class="tab-button <%= activeTab === 'tab-projetos' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="projetos-tab" data-tab="tab-projetos">Gerenciar Projetos</a>
          <a href="#" class="tab-button <%= activeTab === 'tab-categorias' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="categorias-tab" data-tab="tab-categorias">Gerenciar Categorias</a>
          <a href="#" class="tab-button <%= activeTab === 'tab-criterios' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="criterios-tab" data-tab="tab-criterios">Gerenciar Critérios</a>
          <a href="#" class="tab-button <%= activeTab === 'tab-avaliadores' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="avaliadores-tab" data-tab="tab-avaliadores">Gerenciar Avaliadores</a>
          <a href="#" class="tab-button <%= activeTab === 'tab-relatorios' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="relatorios-tab" data-tab="tab-relatorios">Relatórios</a>
          <a href="#" class="tab-button <%= activeTab === 'tab-configuracoes' ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300' %> whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm" id="configuracoes-tab" data-tab="tab-configuracoes">Configurações</a>
        </nav>
      </div>
    </div>

    <div id="tab-content-container">
      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-dashboard' ? '' : 'hidden' %>" id="tab-dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
        <h2 class="text-xl font-semibold text-gray-700 mb-4">Visão Geral da Feira</h2>
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <div class="bg-indigo-500 text-white p-6 rounded-lg shadow-md flex items-center justify-between">
            <div>
              <p class="text-sm font-medium">Projetos Cadastrados</p>
              <p class="text-3xl font-bold"><%= totalProjetos %></p>
            </div>
            <i class="fas fa-project-diagram text-4xl opacity-50"></i>
          </div>
          <div class="bg-green-500 text-white p-6 rounded-lg shadow-md flex items-center justify-between">
            <div>
              <p class="text-sm font-medium">Avaliadores Cadastrados</p>
              <p class="text-3xl font-bold"><%= totalAvaliadores %></p>
            </div>
            <i class="fas fa-users text-4xl opacity-50"></i>
          </div>
          <div class="bg-yellow-500 text-white p-6 rounded-lg shadow-md flex items-center justify-between">
            <div>
              <p class="text-sm font-medium">Avaliações Completas</p>
              <p class="text-3xl font-bold"><%= totalAvaliacoes %></p>
            </div>
            <i class="fas fa-clipboard-check text-4xl opacity-50"></i>
          </div>
        </div>

        <div class="mt-8">
          <h3 class="text-lg font-semibold text-gray-700 mb-4">Projetos por Categoria</h3>
          <canvas id="projetosPorCategoriaChart"></canvas>
        </div>

        <div class="mt-8">
          <h3 class="text-lg font-semibold text-gray-700 mb-4">Status de Avaliação dos Projetos</h3>
          <canvas id="statusAvaliacaoChart"></canvas>
        </div>
      </div>

      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-projetos' ? '' : 'hidden' %>" id="tab-projetos" role="tabpanel" aria-labelledby="projetos-tab">
        <button id="btnAbrirModalProjeto" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg mb-6 shadow-md transition duration-300 ease-in-out">
          <i class="fas fa-plus-circle mr-2"></i>Adicionar Novo Projeto
        </button>

        <div class="overflow-x-auto bg-white rounded-lg shadow-md border border-gray-200">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-100">
              <tr>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Código</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Título</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Categoria</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Escola</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Ações</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (projetos && projetos.length > 0) { %>
                <% projetos.forEach(projeto => { %>
                  <tr class="hover:bg-gray-100 transition duration-150 ease-in-out">
                    <td class="py-3 px-4 text-gray-800"><%= projeto.numero %></td>
                    <td class="py-3 px-4 text-gray-800"><%= projeto.titulo %></td>
                    <td class="py-3 px-4 text-gray-800"><%= projeto.categoria ? projeto.categoria.nome : 'N/A' %></td>
                    <td class="py-3 px-4 text-gray-800"><%= projeto.escolaNome %></td>
                    <td class="py-3 px-4 whitespace-nowrap">
                      <button class="btn-editar-projeto bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1.5 px-3 rounded-md text-sm mr-2 shadow-sm transition duration-300 ease-in-out"
                        data-id="<%= projeto._id %>"
                        data-numero="<%= projeto.numero %>"
                        data-titulo="<%= projeto.titulo %>"
                        data-alunos="<%= projeto.alunos %>"
                        data-resumo="<%= projeto.resumo %>"
                        data-categoria="<%= projeto.categoria ? projeto.categoria._id : '' %>"
                        data-escola-nome="<%= projeto.escolaNome %>">
                        <i class="fas fa-edit mr-1"></i>Editar
                      </button>
                      <form action="/admin/projetos/<%= projeto._id %>?_method=DELETE" method="POST" class="inline-block" onsubmit="return confirm('Tem certeza que deseja deletar este projeto?');">
                        <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-1.5 px-3 rounded-md text-sm shadow-sm transition duration-300 ease-in-out">
                          <i class="fas fa-trash-alt mr-1"></i>Deletar
                        </button>
                      </form>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="py-3 px-4 text-gray-600 text-center">Nenhum projeto cadastrado ainda.</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-categorias' ? '' : 'hidden' %>" id="tab-categorias" role="tabpanel" aria-labelledby="categorias-tab">
        <button id="btnAbrirModalCategoria" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg mb-6 shadow-md transition duration-300 ease-in-out">
          <i class="fas fa-plus-circle mr-2"></i>Adicionar Nova Categoria
        </button>

        <div class="overflow-x-auto bg-white rounded-lg shadow-md border border-gray-200">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-100">
              <tr>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Nome da Categoria</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Ações</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (categorias && categorias.length > 0) { %>
                <% categorias.forEach(categoria => { %>
                  <tr class="hover:bg-gray-100 transition duration-150 ease-in-out">
                    <td class="py-3 px-4 text-gray-800"><%= categoria.nome %></td>
                    <td class="py-3 px-4 whitespace-nowrap">
                      <button class="btn-editar-categoria bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1.5 px-3 rounded-md text-sm mr-2 shadow-sm transition duration-300 ease-in-out"
                        data-id="<%= categoria._id %>" data-nome="<%= categoria.nome %>">
                        <i class="fas fa-edit mr-1"></i>Editar
                      </button>
                      <form action="/admin/categorias/<%= categoria._id %>?_method=DELETE" method="POST" class="inline-block" onsubmit="return confirm('Tem certeza que deseja deletar esta categoria?');">
                        <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-1.5 px-3 rounded-md text-sm shadow-sm transition duration-300 ease-in-out">
                          <i class="fas fa-trash-alt mr-1"></i>Deletar
                        </button>
                      </form>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="2" class="py-3 px-4 text-gray-600 text-center">Nenhuma categoria cadastrada ainda.</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-criterios' ? '' : 'hidden' %>" id="tab-criterios" role="tabpanel" aria-labelledby="criterios-tab">
        <button id="btnAbrirModalCriterio" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg mb-6 shadow-md transition duration-300 ease-in-out">
          <i class="fas fa-plus-circle mr-2"></i>Adicionar Novo Critério
        </button>

        <div class="overflow-x-auto bg-white rounded-lg shadow-md border border-gray-200">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-100">
              <tr>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Nome do Critério</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Descrição</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Observação</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Categorias Aplicáveis</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Ações</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% if (criterios && criterios.length > 0) { %>
                <% criterios.forEach(criterio => { %>
                  <tr class="hover:bg-gray-100 transition duration-150 ease-in-out">
                    <td class="py-3 px-4 text-gray-800"><%= criterio.nome %></td>
                    <td class="py-3 px-4 text-gray-800"><%= criterio.descricao || 'N/A' %></td>
                    <td class="py-3 px-4 text-gray-800"><%= criterio.observacao || 'N/A' %></td>
                    <td class="py-3 px-4">
                      <% if (criterio.categorias && criterio.categorias.length > 0) { %>
                        <% criterio.categorias.forEach(cat => { %>
                          <span class="inline-block bg-blue-100 text-blue-800 text-xs font-semibold mr-1 mb-1 px-2.5 py-0.5 rounded-full"><%= cat.nome %></span>
                        <% }) %>
                      <% } else { %>
                        <span class="text-gray-500">Nenhuma</span>
                      <% } %>
                    </td>
                    <td class="py-3 px-4 whitespace-nowrap">
                      <button class="btn-editar-criterio bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1.5 px-3 rounded-md text-sm mr-2 shadow-sm transition duration-300 ease-in-out"
                        data-id="<%= criterio._id %>"
                        data-nome="<%= criterio.nome %>"
                        data-descricao="<%= criterio.descricao || '' %>"
                        data-observacao="<%= criterio.observacao || '' %>"
                        data-categorias="<%= criterio.categorias.map(cat => cat._id).join(',') %>">
                        <i class="fas fa-edit mr-1"></i>Editar
                      </button>
                      <form action="/admin/criterios/<%= criterio._id %>?_method=DELETE" method="POST" class="inline-block" onsubmit="return confirm('Tem certeza que deseja deletar este critério?');">
                        <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-1.5 px-3 rounded-md text-sm shadow-sm transition duration-300 ease-in-out">
                          <i class="fas fa-trash-alt mr-1"></i>Deletar
                        </button>
                      </form>
                    </td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="5" class="py-3 px-4 text-gray-600 text-center">Nenhum critério cadastrado ainda.</td>
                </tr>
              <% } %>
            </tbody>
          </table>
        </div>
      </div>

      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-avaliadores' ? '' : 'hidden' %>" id="avaliadores" role="tabpanel" aria-labelledby="avaliadores-tab">
        <button id="btnAbrirModalAvaliador" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-5 rounded-lg mb-6 shadow-md transition duration-300 ease-in-out">
          <i class="fas fa-plus-circle mr-2"></i>Adicionar Novo Avaliador
        </button>

        <div class="overflow-x-auto bg-white rounded-lg shadow-md border border-gray-200">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-100">
              <tr>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Nome</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Email</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">PIN</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Ativo</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Projetos Atribuídos</th>
                <th class="py-3 px-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Ações</th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% avaliadores.forEach(avaliador => { %>
                <tr class="hover:bg-gray-100 transition duration-150 ease-in-out">
                  <td class="py-3 px-4 text-gray-800"><%= avaliador.nome %></td>
                  <td class="py-3 px-4 text-gray-800"><%= avaliador.email %></td>
                  <td class="py-3 px-4 text-gray-800"><%= avaliador.pin %></td>
                  <td class="py-3 px-4">
                    <span class="px-2 py-1 rounded-full text-xs font-semibold
                      <%= avaliador.ativo ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800' %>">
                      <%= avaliador.ativo ? 'Sim' : 'Não' %>
                    </span>
                  </td>
                  <td class="py-3 px-4">
                    <% if (avaliador.projetosAtribuidos && avaliador.projetosAtribuidos.length > 0) { %>
                      <% avaliador.projetosAtribuidos.forEach(projeto => { %>
                        <span class="inline-block bg-indigo-100 text-indigo-800 text-xs font-semibold mr-1 mb-1 px-2.5 py-0.5 rounded-full dark:bg-indigo-200 dark:text-indigo-900"><%= projeto.titulo %></span>
                      <% }) %>
                    <% } else { %>
                      <span class="text-gray-500">Nenhum</span>
                    <% } %>
                  </td>
                  <td class="py-3 px-4 whitespace-nowrap">
                    <div class="flex flex-wrap gap-2"> 
                        <button
                            data-avaliador-id="<%= avaliador._id %>"
                            class="gerar-qr-btn bg-green-500 hover:bg-green-600 text-white font-bold py-1.5 px-3 rounded-md text-sm shadow-sm transition duration-300 ease-in-out"
                        >
                            <i class="fas fa-qrcode mr-1"></i>Gerar QR
                        </button>
                        <button class="btn-editar-avaliador bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1.5 px-3 rounded-md text-sm mr-2 shadow-sm transition duration-300 ease-in-out"
                            data-id="<%= avaliador._id %>"
                            data-nome="<%= avaliador.nome %>"
                            data-email="<%= avaliador.email %>"
                            data-pin="<%= avaliador.pin %>"
                            data-ativo="<%= avaliador.ativo %>"
                            data-projetos="<%= avaliador.projetosAtribuidos.map(p => p._id).join(',') %>">
                            <i class="fas fa-edit mr-1"></i>Editar
                        </button>
                        <form action="/admin/avaliadores/<%= avaliador._id %>/excluir" method="POST" class="inline-block" onsubmit="return confirm('Tem certeza que deseja deletar este avaliador?');">
                            <button type="submit" class="bg-red-600 hover:bg-red-700 text-white font-bold py-1.5 px-3 rounded-md text-sm shadow-sm transition duration-300 ease-in-out">
                                <i class="fas fa-trash-alt mr-1"></i>Deletar
                            </button>
                        </form>
                    </div>
                  </td>
                </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>

      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-relatorios' ? '' : 'hidden' %>" id="tab-relatorios" role="tabpanel" aria-labelledby="relatorios-tab">
        <h2 class="text-xl font-semibold text-gray-700 mb-4">Gerar Relatórios de Avaliação</h2>
        <div class="mb-4">
            <label for="selectFeiraRelatorio" class="block text-sm font-medium text-gray-700 mb-2">Selecione a Feira:</label>
            <select id="selectFeiraRelatorio" name="feiraId" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm">
                <option value="">Selecione uma feira</option>
                <% if (feiras && feiras.length > 0) { %>
                    <% feiras.forEach(feira => { %>
                        <option value="<%= feira._id %>"><%= feira.nome %> (<%= feira.inicioFeira.toLocaleDateString('pt-BR') %> - <%= feira.fimFeira.toLocaleDateString('pt-BR') %>)</option>
                    <% }); %>
                <% } %>
            </select>
        </div>

        <div class="mb-6">
            <label class="block text-sm font-medium text-gray-700 mb-2">Avaliadores Disponíveis:</label>
            <div id="avaliadoresCheckboxes" class="max-h-60 overflow-y-auto border border-gray-300 rounded-md p-3 bg-gray-50">
                <% if (avaliadores && avaliadores.length > 0) { %>
                    <div class="mb-2">
                        <label class="inline-flex items-center">
                            <input type="checkbox" id="checkAllAvaliadores" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                            <span class="ml-2 text-sm text-gray-700 font-semibold">Selecionar Todos</span>
                        </label>
                    </div>
                    <% avaliadores.forEach(avaliador => { %>
                        <div class="flex items-center mb-1">
                            <input type="checkbox" id="avaliador-<%= avaliador._id %>" name="avaliadoresSelecionados" value="<%= avaliador._id %>" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                            <label for="avaliador-<%= avaliador._id %>" class="ml-2 text-sm text-gray-700"><%= avaliador.nome %> (<%= avaliador.email %>)</label>
                        </div>
                    <% }); %>
                <% } else { %>
                    <p class="text-sm text-gray-500">Nenhum avaliador disponível para esta escola.</p>
                <% } %>
            </div>
        </div>

        <button id="btnGerarRelatorioOfflineConfirm" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition duration-300 ease-in-out">
            <i class="fas fa-file-pdf mr-2"></i>Gerar Relatório(s) Offline
        </button>
      </div>

      <div class="tab-content p-6 bg-white rounded-lg shadow-inner border border-gray-200 <%= activeTab === 'tab-configuracoes' ? '' : 'hidden' %>" id="tab-configuracoes" role="tabpanel" aria-labelledby="configuracoes-tab">
        <h2 class="text-xl font-semibold text-gray-700 mb-4">Configurações da Feira e Escola</h2>

        <div class="mb-8 p-4 border border-gray-200 rounded-lg shadow-sm">
            <h3 class="text-lg font-semibold text-gray-700 mb-4">Gerenciar Feira</h3>
            <form action="/admin/feira/atualizar" method="POST">
                <input type="hidden" name="feiraId" value="<%= feira._id %>">
                <div class="mb-4">
                    <label for="nomeFeira" class="block text-sm font-medium text-gray-700">Nome da Feira</label>
                    <input type="text" id="nomeFeira" name="nome" value="<%= feira.nome %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                </div>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                    <div>
                        <label for="inicioFeira" class="block text-sm font-medium text-gray-700">Início da Feira</label>
                        <input type="date" id="inicioFeira" name="inicioFeira" value="<%= feira.inicioFeira.toISOString().split('T')[0] %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div>
                        <label for="fimFeira" class="block text-sm font-medium text-gray-700">Fim da Feira</label>
                        <input type="date" id="fimFeira" name="fimFeira" value="<%= feira.fimFeira.toISOString().split('T')[0] %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                </div>
                <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out">Atualizar Feira</button>
            </form>
        </div>

        <div class="p-4 border border-gray-200 rounded-lg shadow-sm">
            <h3 class="text-lg font-semibold text-gray-700 mb-4">Gerenciar Dados da Escola</h3>
            <form action="/admin/escola/atualizar" method="POST">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                    <div>
                        <label for="escolaNome" class="block text-sm font-medium text-gray-700">Nome da Escola</label>
                        <input type="text" id="escolaNome" name="nome" value="<%= escola.nome %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div>
                        <label for="escolaEmail" class="block text-sm font-medium text-gray-700">Email da Escola</label>
                        <input type="email" id="escolaEmail" name="email" value="<%= escola.email %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div>
                        <label for="escolaTelefone" class="block text-sm font-medium text-gray-700">Telefone</label>
                        <input type="tel" id="escolaTelefone" name="telefone" value="<%= escola.telefone %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div>
                        <label for="escolaDiretor" class="block text-sm font-medium text-gray-700">Diretor(a)</label>
                        <input type="text" id="escolaDiretor" name="diretor" value="<%= escola.diretor %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div>
                        <label for="escolaResponsavel" class="block text-sm font-medium text-gray-700">Responsável pela Feira</label>
                        <input type="text" id="escolaResponsavel" name="responsavel" value="<%= escola.responsavel %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div>
                        <label for="escolaEndereco" class="block text-sm font-medium text-gray-700">Endereço</label>
                        <input type="text" id="escolaEndereco" name="endereco" value="<%= escola.endereco %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                    <div>
                        <label for="escolaCnpj" class="block text-sm font-medium text-gray-700">CNPJ</label>
                        <input type="text" id="escolaCnpj" name="cnpj" value="<%= escola.cnpj %>" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500">
                    </div>
                </div>
                <div class="mb-4">
                    <label for="escolaDescricao" class="block text-sm font-medium text-gray-700">Descrição Breve da Escola</label>
                    <textarea id="escolaDescricao" name="descricao" rows="3" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500"><%= escola.descricao %></textarea>
                </div>
                <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg shadow-md transition duration-300 ease-in-out">Atualizar Dados da Escola</button>
            </form>
        </div>
      </div>
    </div>
  </main>

  <%- include('./partials/admin-footer') %>

  <div id="modalProjeto" class="modal-full hidden">
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-lg mx-auto">
      <h3 id="tituloProjeto" class="text-xl font-semibold mb-4">Adicionar Novo Projeto</h3>
      <form id="formProjeto" method="POST">
        <input type="hidden" id="projetoId" name="id">
        <div class="mb-4">
          <label for="numeroProjeto" class="block text-sm font-medium text-gray-700">Código/Número</label>
          <input type="text" id="numeroProjeto" name="numero" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required>
        </div>
        <div class="mb-4">
          <label for="tituloProjetoInput" class="block text-sm font-medium text-gray-700">Título</label>
          <input type="text" id="tituloProjetoInput" name="titulo" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required>
        </div>
        <div class="mb-4">
          <label for="alunosProjeto" class="block text-sm font-medium text-gray-700">Alunos Envolvidos</label>
          <input type="text" id="alunosProjeto" name="alunos" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" placeholder="Ex: João, Maria, Pedro" required>
        </div>
        <div class="mb-4">
          <label for="resumoProjeto" class="block text-sm font-medium text-gray-700">Resumo</label>
          <textarea id="resumoProjeto" name="resumo" rows="3" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required></textarea>
        </div>
        <div class="mb-4">
          <label for="categoriaProjeto" class="block text-sm font-medium text-gray-700">Categoria</label>
          <select id="categoriaProjeto" name="categoria" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm" required>
            <option value="">Selecione uma categoria</option>
            <% if (categorias && categorias.length > 0) { %>
              <% categorias.forEach(cat => { %>
                <option value="<%= cat._id %>"><%= cat.nome %></option>
              <% }) %>
            <% } %>
          </select>
        </div>
        <div class="mb-4">
          <label for="escolaNomeProjeto" class="block text-sm font-medium text-gray-700">Nome da Escola</label>
          <input type="text" id="escolaNomeProjeto" name="escolaNome" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" value="<%= escola.nome %>" readonly>
        </div>
        <div class="flex justify-end space-x-3">
          <button type="button" id="btnFecharProjeto" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
          <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg">Salvar</button>
        </div>
      </form>
    </div>
  </div>

  <div id="modalCategoria" class="modal-full hidden">
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-lg mx-auto">
      <h3 id="tituloCategoria" class="text-xl font-semibold mb-4">Adicionar Nova Categoria</h3>
      <form id="formCategoria" method="POST">
        <input type="hidden" id="categoriaId" name="id">
        <div class="mb-4">
          <label for="nomeCategoria" class="block text-sm font-medium text-gray-700">Nome da Categoria</label>
          <input type="text" id="nomeCategoria" name="nome" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required>
        </div>
        <div class="flex justify-end space-x-3">
          <button type="button" id="btnFecharCategoria" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
          <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg">Salvar</button>
        </div>
      </form>
    </div>
  </div>

  <div id="modalCriterio" class="modal-full hidden">
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-lg mx-auto">
      <h3 id="tituloCriterio" class="text-xl font-semibold mb-4">Adicionar Novo Critério</h3>
      <form id="formCriterio" method="POST">
        <input type="hidden" id="criterioId" name="id">
        <div class="mb-4">
          <label for="nomeCriterio" class="block text-sm font-medium text-gray-700">Nome do Critério</label>
          <input type="text" id="nomeCriterio" name="nome" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required>
        </div>
        <div class="mb-4">
          <label for="descricaoCriterio" class="block text-sm font-medium text-gray-700">Descrição (Opcional)</label>
          <textarea id="descricaoCriterio" name="descricao" rows="2" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3"></textarea>
        </div>
        <div class="mb-4">
          <label for="observacaoCriterio" class="block text-sm font-medium text-gray-700">Observação (Opcional)</label>
          <textarea id="observacaoCriterio" name="observacao" rows="2" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3"></textarea>
        </div>
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700">Categorias Aplicáveis:</label>
          <div id="criterioCategoriasCheckboxes" class="max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3 bg-gray-50">
            <% if (categorias && categorias.length > 0) { %>
                <% categorias.forEach(categoria => { %>
                    <div class="flex items-center mb-1">
                        <input type="checkbox" id="criterio-categoria-<%= categoria._id %>" name="categoriasAplicaveis" value="<%= categoria._id %>" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                        <label for="criterio-categoria-<%= categoria._id %>" class="ml-2 text-sm text-gray-700"><%= categoria.nome %></label>
                    </div>
                <% }) %>
            <% } else { %>
                <p class="text-sm text-gray-500">Nenhuma categoria cadastrada. Cadastre categorias primeiro.</p>
            <% } %>
          </div>
        </div>
        <div class="flex justify-end space-x-3">
          <button type="button" id="btnFecharCriterio" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
          <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg">Salvar</button>
        </div>
      </form>
    </div>
  </div>

  <div id="modalAvaliador" class="modal-full hidden">
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-lg mx-auto">
      <h3 id="tituloAvaliador" class="text-xl font-semibold mb-4">Adicionar Novo Avaliador</h3>
      <form id="formAvaliador" method="POST">
        <input type="hidden" id="avaliadorId" name="id">
        <div class="mb-4">
          <label for="nomeAvaliador" class="block text-sm font-medium text-gray-700">Nome</label>
          <input type="text" id="nomeAvaliador" name="nome" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required>
        </div>
        <div class="mb-4">
          <label for="emailAvaliador" class="block text-sm font-medium text-gray-700">Email</label>
          <input type="email" id="emailAvaliador" name="email" class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3" required>
        </div>
        <div id="pinDisplayDiv" class="mb-4 hidden">
          <label for="avaliadorPinDisplay" class="block text-sm font-medium text-gray-700">PIN de Acesso</label>
          <span id="avaliadorPinDisplay" class="mt-1 block w-full bg-gray-100 border border-gray-300 rounded-md shadow-sm py-2 px-3 text-gray-700"></span>
          <p class="text-sm text-gray-500 mt-1">O PIN é gerado automaticamente para novos avaliadores.</p>
        </div>
        <div class="mb-4">
          <label for="ativoAvaliador" class="inline-flex items-center">
            <input type="checkbox" id="ativoAvaliador" name="ativo" class="form-checkbox h-5 w-5 text-indigo-600">
            <span class="ml-2 text-sm text-gray-700">Avaliador Ativo</span>
          </label>
        </div>
        <div class="mb-4">
          <label class="block text-sm font-medium text-gray-700">Projetos Atribuídos (Opcional):</label>
          <div id="projetosAvaliadorCheckboxes" class="max-h-40 overflow-y-auto border border-gray-300 rounded-md p-3 bg-gray-50">
            <% if (projetos && projetos.length > 0) { %>
              <% projetos.forEach(projeto => { %>
                <div class="flex items-center mb-1">
                  <input type="checkbox" id="projeto-avaliador-<%= projeto._id %>" name="projetosAtribuidos" value="<%= projeto._id %>" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                  <label for="projeto-avaliador-<%= projeto._id %>" class="ml-2 text-sm text-gray-700"><%= projeto.titulo %> (Cod: <%= projeto.numero %>)</label>
                </div>
              <% }) %>
            <% } else { %>
              <p class="text-sm text-gray-500">Nenhum projeto cadastrado. Cadastre projetos primeiro.</p>
            <% } %>
          </div>
        </div>
        <div class="flex justify-end space-x-3">
          <button type="button" id="btnFecharAvaliador" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
          <button type="submit" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-4 rounded-lg">Salvar</button>
        </div>
      </form>
    </div>
  </div>

  <div id="qrCodeModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg shadow-xl w-1/3">
      <h3 class="text-lg font-semibold mb-4 text-center">QR Code de Login para Avaliador</h3>
      <div class="flex justify-center mb-4">
        <canvas id="qrCodeCanvas" class="border border-gray-300"></canvas>
      </div>
      <p class="text-center text-sm text-gray-600 mb-4">Escaneie este código com o celular do avaliador para login direto. (Válido por 10 minutos)</p>
      <div class="flex justify-end">
        <button type="button" onclick="fecharQrCodeModal()" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded">Fechar</button>
      </div>
    </div>
  </div>

  <div id="modalRelatorioOffline" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden flex items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg shadow-xl w-full max-w-lg mx-auto">
      <h3 class="text-xl font-semibold mb-4 text-center">Gerar Relatórios Offline</h3>
      <div class="mb-4">
          <label for="selectFeiraModalRelatorio" class="block text-sm font-medium text-gray-700 mb-2">Selecione a Feira:</label>
          <select id="selectFeiraModalRelatorio" name="feiraId" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm rounded-md shadow-sm">
              <option value="">Selecione uma feira</option>
              <% if (feiras && feiras.length > 0) { %>
                  <% feiras.forEach(feira => { %>
                      <option value="<%= feira._id %>"><%= feira.nome %> (<%= feira.inicioFeira.toLocaleDateString('pt-BR') %> - <%= feira.fimFeira.toLocaleDateString('pt-BR') %>)</option>
                  <% }); %>
              <% } %>
          </select>
      </div>

      <div class="mb-6">
          <label class="block text-sm font-medium text-gray-700 mb-2">Selecione os Avaliadores:</label>
          <div id="modalAvaliadoresCheckboxes" class="max-h-60 overflow-y-auto border border-gray-300 rounded-md p-3 bg-gray-50">
              <% if (avaliadores && avaliadores.length > 0) { %>
                  <div class="mb-2">
                      <label class="inline-flex items-center">
                          <input type="checkbox" id="checkAllModalAvaliadores" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                          <span class="ml-2 text-sm text-gray-700 font-semibold">Selecionar Todos</span>
                      </label>
                  </div>
                  <% avaliadores.forEach(avaliador => { %>
                      <div class="flex items-center mb-1">
                          <input type="checkbox" id="modal-avaliador-<%= avaliador._id %>" name="avaliadoresSelecionados" value="<%= avaliador._id %>" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                          <label for="modal-avaliador-<%= avaliador._id %>" class="ml-2 text-sm text-gray-700"><%= avaliador.nome %> (<%= avaliador.email %>)</label>
                      </div>
                  <% }); %>
              <% } else { %>
                  <p class="text-sm text-gray-500">Nenhum avaliador disponível para esta escola.</p>
              <% } %>
          </div>
      </div>
      
      <div class="flex justify-end space-x-3">
          <button type="button" id="btnFecharModalRelatorioOffline" class="bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded-lg">Cancelar</button>
          <button type="button" id="btnGerarRelatorioOfflineConfirmModal" class="bg-indigo-600 hover:bg-indigo-700 text-white font-bold py-2 px-5 rounded-lg shadow-md transition duration-300 ease-in-out">
              <i class="fas fa-file-pdf mr-2"></i>Gerar Relatório(s)
          </button>
      </div>
    </div>
  </div>


  <script>
    document.addEventListener('DOMContentLoaded', () => {
        // Obter o parâmetro 'tab' da URL
        const urlParams = new URLSearchParams(window.location.search);
        const activeTabFromUrl = urlParams.get('tab');

        // Função para ativar uma aba
        function activateTab(tabId) {
            document.querySelectorAll('.tab-content').forEach(content => {
                content.classList.add('hidden');
            });
            document.querySelectorAll('.tab-button').forEach(button => {
                button.classList.remove('border-indigo-500', 'text-indigo-600');
                button.classList.add('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
            });

            const targetContent = document.getElementById(tabId);
            const targetButton = document.getElementById(tabId + '-tab');
            
            if (targetContent) {
                targetContent.classList.remove('hidden');
            }
            if (targetButton) {
                targetButton.classList.remove('border-transparent', 'text-gray-500', 'hover:text-gray-700', 'hover:border-gray-300');
                targetButton.classList.add('border-indigo-500', 'text-indigo-600');
            }

            // Atualizar a URL sem recarregar a página
            history.replaceState(null, '', `?tab=${tabId}`);

            // Após ativar a aba, verificar se é a aba de relatório e ajustar o select da feira
            if (tabId === 'tab-relatorios' && selectFeiraRelatorio && modalRelatorioOffline) {
                // Sincroniza o select da feira na aba de relatório com o do modal
                // para garantir que o valor inicial seja o mesmo
                selectFeiraModalRelatorio.value = selectFeiraRelatorio.value;

                // Também assegura que o estado dos checkboxes do modal reflete a seleção da aba principal
                updateModalAvaliadoresCheckboxes(selectFeiraRelatorio.value);
            }
        }

        // Ativar a aba com base na URL ou padrão
        if (activeTabFromUrl) {
            activateTab(activeTabFromUrl);
        } else {
            activateTab('tab-dashboard'); // Aba padrão
        }

        // Adicionar listeners para os botões de tab
        document.querySelectorAll('.tab-button').forEach(button => {
            button.addEventListener('click', (event) => {
                event.preventDefault();
                const tabId = event.target.dataset.tab;
                activateTab(tabId);
            });
        });

        // ===========================================
        // Lógica dos Modais CRUD (Projeto, Categoria, Critério, Avaliador)
        // ===========================================

        // Projeto Modal
        const modalProjeto = document.getElementById('modalProjeto');
        const btnAbrirModalProjeto = document.getElementById('btnAbrirModalProjeto');
        const btnFecharProjeto = document.getElementById('btnFecharProjeto');
        const formProjeto = document.getElementById('formProjeto');
        const tituloProjeto = document.getElementById('tituloProjeto');
        const projetoId = document.getElementById('projetoId');
        const numeroProjeto = document.getElementById('numeroProjeto');
        const tituloProjetoInput = document.getElementById('tituloProjetoInput');
        const alunosProjeto = document.getElementById('alunosProjeto');
        const resumoProjeto = document.getElementById('resumoProjeto');
        const categoriaProjeto = document.getElementById('categoriaProjeto');
        const escolaNomeProjeto = document.getElementById('escolaNomeProjeto');

        btnAbrirModalProjeto.addEventListener('click', () => {
            tituloProjeto.textContent = 'Adicionar Novo Projeto';
            formProjeto.action = '/admin/projetos';
            projetoId.value = '';
            numeroProjeto.value = '';
            tituloProjetoInput.value = '';
            alunosProjeto.value = '';
            resumoProjeto.value = '';
            categoriaProjeto.value = '';
            escolaNomeProjeto.value = '<%= escola.nome %>'; // Garante que o nome da escola seja preenchido

            modalProjeto.classList.remove('hidden');
            modalProjeto.classList.add('flex');
        });

        btnFecharProjeto.addEventListener('click', () => {
            modalProjeto.classList.remove('flex');
            modalProjeto.classList.add('hidden');
        });

        document.querySelectorAll('.btn-editar-projeto').forEach(button => {
            button.addEventListener('click', (event) => {
                tituloProjeto.textContent = 'Editar Projeto';
                formProjeto.action = `/admin/projetos/${event.target.dataset.id}?_method=PUT`;
                projetoId.value = event.target.dataset.id;
                numeroProjeto.value = event.target.dataset.numero;
                tituloProjetoInput.value = event.target.dataset.titulo;
                alunosProjeto.value = event.target.dataset.alunos;
                resumoProjeto.value = event.target.dataset.resumo;
                categoriaProjeto.value = event.target.dataset.categoria;
                escolaNomeProjeto.value = event.target.dataset.escolaNome;

                modalProjeto.classList.remove('hidden');
                modalProjeto.classList.add('flex');
            });
        });

        // Categoria Modal
        const modalCategoria = document.getElementById('modalCategoria');
        const btnAbrirModalCategoria = document.getElementById('btnAbrirModalCategoria');
        const btnFecharCategoria = document.getElementById('btnFecharCategoria');
        const formCategoria = document.getElementById('formCategoria');
        const tituloCategoria = document.getElementById('tituloCategoria');
        const categoriaId = document.getElementById('categoriaId');
        const nomeCategoria = document.getElementById('nomeCategoria');

        btnAbrirModalCategoria.addEventListener('click', () => {
            tituloCategoria.textContent = 'Adicionar Nova Categoria';
            formCategoria.action = '/admin/categorias';
            categoriaId.value = '';
            nomeCategoria.value = '';
            modalCategoria.classList.remove('hidden');
            modalCategoria.classList.add('flex');
        });

        btnFecharCategoria.addEventListener('click', () => {
            modalCategoria.classList.remove('flex');
            modalCategoria.classList.add('hidden');
        });

        document.querySelectorAll('.btn-editar-categoria').forEach(button => {
            button.addEventListener('click', (event) => {
                tituloCategoria.textContent = 'Editar Categoria';
                formCategoria.action = `/admin/categorias/${event.target.dataset.id}?_method=PUT`;
                categoriaId.value = event.target.dataset.id;
                nomeCategoria.value = event.target.dataset.nome;
                modalCategoria.classList.remove('hidden');
                modalCategoria.classList.add('flex');
            });
        });

        // Critério Modal
        const modalCriterio = document.getElementById('modalCriterio');
        const btnAbrirModalCriterio = document.getElementById('btnAbrirModalCriterio');
        const btnFecharCriterio = document.getElementById('btnFecharCriterio');
        const formCriterio = document.getElementById('formCriterio');
        const tituloCriterio = document.getElementById('tituloCriterio');
        const criterioId = document.getElementById('criterioId');
        const nomeCriterio = document.getElementById('nomeCriterio');
        const descricaoCriterio = document.getElementById('descricaoCriterio');
        const observacaoCriterio = document.getElementById('observacaoCriterio');
        const criterioCategoriasCheckboxes = document.getElementById('criterioCategoriasCheckboxes');

        btnAbrirModalCriterio.addEventListener('click', () => {
            tituloCriterio.textContent = 'Adicionar Novo Critério';
            formCriterio.action = '/admin/criterios';
            criterioId.value = '';
            nomeCriterio.value = '';
            descricaoCriterio.value = '';
            observacaoCriterio.value = '';
            criterioCategoriasCheckboxes.querySelectorAll('input[type="checkbox"]').forEach(checkbox => checkbox.checked = false);
            modalCriterio.classList.remove('hidden');
            modalCriterio.classList.add('flex');
        });

        btnFecharCriterio.addEventListener('click', () => {
            modalCriterio.classList.remove('flex');
            modalCriterio.classList.add('hidden');
        });

        document.querySelectorAll('.btn-editar-criterio').forEach(button => {
            button.addEventListener('click', (event) => {
                tituloCriterio.textContent = 'Editar Critério';
                formCriterio.action = `/admin/criterios/${event.target.dataset.id}?_method=PUT`;
                criterioId.value = event.target.dataset.id;
                nomeCriterio.value = event.target.dataset.nome;
                descricaoCriterio.value = event.target.dataset.descricao;
                observacaoCriterio.value = event.target.dataset.observacao;

                const categoriasIds = event.target.dataset.categorias ? event.target.dataset.categorias.split(',') : [];
                criterioCategoriasCheckboxes.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                    checkbox.checked = categoriasIds.includes(checkbox.value);
                });

                modalCriterio.classList.remove('hidden');
                modalCriterio.classList.add('flex');
            });
        });

        // Avaliador Modal
        const modalAvaliador = document.getElementById('modalAvaliador');
        const btnAbrirModalAvaliador = document.getElementById('btnAbrirModalAvaliador');
        const btnFecharAvaliador = document.getElementById('btnFecharAvaliador');
        const formAvaliador = document.getElementById('formAvaliador');
        const tituloAvaliador = document.getElementById('tituloAvaliador');
        const avaliadorId = document.getElementById('avaliadorId');
        const inputNomeAvaliador = document.getElementById('nomeAvaliador');
        const inputEmailAvaliador = document.getElementById('emailAvaliador');
        const inputAtivoAvaliador = document.getElementById('ativoAvaliador');
        const avaliadorPinDisplay = document.getElementById('avaliadorPinDisplay');
        const pinDisplayDiv = document.getElementById('pinDisplayDiv');
        const projetosAvaliadorCheckboxesDiv = document.getElementById('projetosAvaliadorCheckboxes');

        btnAbrirModalAvaliador.addEventListener('click', () => {
            tituloAvaliador.textContent = 'Adicionar Novo Avaliador';
            formAvaliador.action = '/admin/avaliadores'; // Rota de criação
            avaliadorId.value = '';
            inputNomeAvaliador.value = '';
            inputEmailAvaliador.value = '';
            inputAtivoAvaliador.checked = true; // Novo avaliador é ativo por padrão
            avaliadorPinDisplay.textContent = 'Gerado Automaticamente';
            pinDisplayDiv.classList.remove('hidden'); // Mostra o PIN para novos

            // Limpar todos os checkboxes de projetos
            projetosAvaliadorCheckboxesDiv.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.checked = false;
            });

            modalAvaliador.classList.remove('hidden');
            modalAvaliador.classList.add('flex');
        });

        btnFecharAvaliador.addEventListener('click', () => {
            modalAvaliador.classList.remove('flex');
            modalAvaliador.classList.add('hidden');
        });

        document.querySelectorAll('.btn-editar-avaliador').forEach(button => {
            button.addEventListener('click', (event) => {
                tituloAvaliador.textContent = 'Editar Avaliador';
                // Certifique-se de que `event.target.dataset.id` é usado, e não `dataset.avaliadorId` aqui, 
                // pois o botão editar usa `data-id`.
                const currentAvaliadorId = event.target.dataset.id; 
                formAvaliador.action = `/admin/avaliadores/${currentAvaliadorId}?_method=PUT`; // Rota de edição
                avaliadorId.value = currentAvaliadorId;
                inputNomeAvaliador.value = event.target.dataset.nome;
                inputEmailAvaliador.value = event.target.dataset.email;
                inputAtivoAvaliador.checked = event.target.dataset.ativo === 'true';
                avaliadorPinDisplay.textContent = event.target.dataset.pin;
                pinDisplayDiv.classList.remove('hidden'); // Mostra o PIN para edição

                // Marcar checkboxes de projetos
                const projetosIds = event.target.dataset.projetos ? event.target.dataset.projetos.split(',') : [];
                projetosAvaliadorCheckboxesDiv.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                    checkbox.checked = projetosIds.includes(checkbox.value);
                });

                modalAvaliador.classList.remove('hidden');
                modalAvaliador.classList.add('flex');
            });
        });

        // ===========================================
        // Lógica do Modal de Relatório Offline
        // ===========================================
        const modalRelatorioOffline = document.getElementById('modalRelatorioOffline');
        const btnAbrirModalRelatorioOffline = document.querySelector('[data-tab="tab-relatorios"]'); // Botão da aba Relatórios
        const btnFecharModalRelatorioOffline = document.getElementById('btnFecharModalRelatorioOffline');
        const selectFeiraRelatorio = document.getElementById('selectFeiraRelatorio');
        const selectFeiraModalRelatorio = document.getElementById('selectFeiraModalRelatorio'); // Adicionado
        const avaliadoresCheckboxesDiv = document.getElementById('avaliadoresCheckboxes'); // Adicionado
        const modalAvaliadoresCheckboxes = document.getElementById('modalAvaliadoresCheckboxes'); // Adicionado
        const checkAllAvaliadores = document.getElementById('checkAllAvaliadores'); // Adicionado
        const checkAllModalAvaliadores = document.getElementById('checkAllModalAvaliadores'); // Adicionado
        const btnGerarRelatorioOfflineConfirm = document.getElementById('btnGerarRelatorioOfflineConfirm');
        const btnGerarRelatorioOfflineConfirmModal = document.getElementById('btnGerarRelatorioOfflineConfirmModal');


        // Função para atualizar checkboxes de avaliadores no modal
        function updateModalAvaliadoresCheckboxes(feiraId) {
            if (!modalAvaliadoresCheckboxes) return;

            modalAvaliadoresCheckboxes.innerHTML = `
                <div class="mb-2">
                    <label class="inline-flex items-center">
                        <input type="checkbox" id="checkAllModalAvaliadores" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                        <span class="ml-2 text-sm text-gray-700 font-semibold">Selecionar Todos</span>
                    </label>
                </div>
            `; // Limpa e adiciona o "Selecionar Todos"

            const avaliadoresParaFeira = JSON.parse('<%- JSON.stringify(avaliadores) %>').filter(avaliador => {
                // Filtra avaliadores que têm projetos atribuídos à feira selecionada
                return avaliador.projetosAtribuidos.some(projeto => projeto.feira && projeto.feira.toString() === feiraId);
            });

            if (avaliadoresParaFeira.length > 0) {
                avaliadoresParaFeira.forEach(avaliador => {
                    const div = document.createElement('div');
                    div.className = 'flex items-center mb-1';
                    div.innerHTML = `
                        <input type="checkbox" id="modal-avaliador-${avaliador._id}" name="avaliadoresSelecionadosModal" value="${avaliador._id}" class="form-checkbox h-4 w-4 text-indigo-600 transition duration-150 ease-in-out">
                        <label for="modal-avaliador-${avaliador._id}" class="ml-2 text-sm text-gray-700">${avaliador.nome} (${avaliador.email})</label>
                    `;
                    modalAvaliadoresCheckboxes.appendChild(div);
                });
            } else {
                const p = document.createElement('p');
                p.className = 'text-sm text-gray-500';
                p.textContent = 'Nenhum avaliador disponível para esta feira.';
                modalAvaliadoresCheckboxes.appendChild(p);
            }
            // Re-adiciona listener para o "Selecionar Todos" no modal
            const newCheckAllModalAvaliadores = document.getElementById('checkAllModalAvaliadores');
            if (newCheckAllModalAvaliadores) {
                newCheckAllModalAvaliadores.addEventListener('change', (e) => {
                    const isChecked = e.target.checked;
                    modalAvaliadoresCheckboxes.querySelectorAll('input[type="checkbox"][name="avaliadoresSelecionadosModal"]').forEach(checkbox => {
                        checkbox.checked = isChecked;
                    });
                });
            }
        }

        // Listener para o select de feira na aba de relatório
        if (selectFeiraRelatorio) {
            selectFeiraRelatorio.addEventListener('change', (event) => {
                updateModalAvaliadoresCheckboxes(event.target.value);
                if (selectFeiraModalRelatorio) {
                    selectFeiraModalRelatorio.value = event.target.value; // Sincroniza o modal
                }
            });
        }
        
        // Listener para o select de feira dentro do modal
        if (selectFeiraModalRelatorio) {
            selectFeiraModalRelatorio.addEventListener('change', (event) => {
                updateModalAvaliadoresCheckboxes(event.target.value);
                if (selectFeiraRelatorio) {
                    selectFeiraRelatorio.value = event.target.value; // Sincroniza a aba principal
                }
            });
        }

        // Abrir o modal de relatório offline (usado pela aba "Relatórios")
        if (btnAbrirModalRelatorioOffline) {
            btnAbrirModalRelatorioOffline.addEventListener('click', (event) => {
                modalRelatorioOffline.classList.remove('hidden');
                modalRelatorioOffline.classList.add('flex');
                // Sincroniza o select da feira do modal com o da aba
                if (selectFeiraRelatorio && selectFeiraModalRelatorio) {
                    selectFeiraModalRelatorio.value = selectFeiraRelatorio.value;
                    updateModalAvaliadoresCheckboxes(selectFeiraRelatorio.value);
                }
            });
        }

        // Fechar o modal de relatório offline
        if (btnFecharModalRelatorioOffline) {
            btnFecharModalRelatorioOffline.addEventListener('click', () => {
                modalRelatorioOffline.classList.remove('flex');
                modalRelatorioOffline.classList.add('hidden');
            });
        }

        // Checkbox "Selecionar Todos" para a aba principal (não o modal)
        if (checkAllAvaliadores) {
            checkAllAvaliadores.addEventListener('change', (e) => {
                const isChecked = e.target.checked;
                avaliadoresCheckboxesDiv.querySelectorAll('input[type="checkbox"][name="avaliadoresSelecionados"]').forEach(checkbox => {
                    checkbox.checked = isChecked;
                });
            });
        }

        // Gerar relatórios (da aba principal, sem abrir modal) - agora abre abas individuais
        if (btnGerarRelatorioOfflineConfirm) {
            btnGerarRelatorioOfflineConfirm.addEventListener('click', () => {
            const feiraId = selectFeiraRelatorio.value;

            const avaliadoresSelecionados = [];
            if (avaliadoresCheckboxesDiv) {
                avaliadoresCheckboxesDiv
                    .querySelectorAll('input[type="checkbox"][name="avaliadoresSelecionados"]:checked')
                    .forEach(checkbox => {
                        avaliadoresSelecionados.push(checkbox.value);
                    });
            }

            if (!feiraId || avaliadoresSelecionados.length === 0) {
                alert('Por favor, selecione uma feira e pelo menos um avaliador.');
                return;
            }

            btnGerarRelatorioOfflineConfirm.disabled = true;

            // Abrir cada aba de forma síncrona (dentro do clique)
            for (let i = 0; i < avaliadoresSelecionados.length; i++) {
                const avaliadorId = avaliadoresSelecionados[i];
                const url = `/admin/relatorio/avaliacao-offline/${feiraId}/${avaliadorId}`;

                const novaAba = window.open(url, '_blank');
                if (!novaAba) {
                    console.warn(`A aba para o avaliador ${avaliadorId} foi bloqueada pelo navegador.`);
                    alert('Algumas abas podem ter sido bloqueadas pelo navegador. Por favor, permita pop-ups.');
                    btnGerarRelatorioOfflineConfirm.disabled = false;
                    return; // Sai se a primeira aba for bloqueada
                }
            }
            alert('Relatório(s) gerado(s) com sucesso! Verifique as novas abas.');
            btnGerarRelatorioOfflineConfirm.disabled = false;
        });
        }


        // Gerar relatórios (do modal) - ajustado para usar novos checkboxes do modal
        if (btnGerarRelatorioOfflineConfirmModal) {
            btnGerarRelatorioOfflineConfirmModal.addEventListener('click', async () => {
                const feiraId = selectFeiraModalRelatorio.value;

                const avaliadoresSelecionados = [];
                // Pega os checkboxes do modal
                modalAvaliadoresCheckboxes
                    .querySelectorAll('input[type="checkbox"][name="avaliadoresSelecionadosModal"]:checked')
                    .forEach(checkbox => {
                        avaliadoresSelecionados.push(checkbox.value);
                    });

                if (!feiraId || avaliadoresSelecionados.length === 0) {
                    alert('Por favor, selecione uma feira e pelo menos um avaliador.');
                    return;
                }

                btnGerarRelatorioOfflineConfirmModal.disabled = true;

                try {
                    // Abrir cada aba de forma síncrona
                    for (let i = 0; i < avaliadoresSelecionados.length; i++) {
                        const avaliadorId = avaliadoresSelecionados[i];
                        const url = `/admin/relatorio/avaliacao-offline/${feiraId}/${avaliadorId}`;
                        const novaAba = window.open(url, '_blank');
                        if (!novaAba) {
                            console.warn(`A aba para o avaliador ${avaliadorId} foi bloqueada pelo navegador.`);
                            // Pode alertar aqui ou no final
                        }
                    }
                    alert('Relatório(s) gerado(s) com sucesso! Verifique as novas abas.');
                    fecharModalRelatorioOffline(); // Fecha o modal após o sucesso
                } catch (error) {
                    console.error('Erro na requisição para gerar relatório:', error);
                    alert('Ocorreu um erro ao gerar o relatório. Verifique o console para mais detalhes.');
                } finally {
                    btnGerarRelatorioOfflineConfirmModal.disabled = false;
                }
            });
        }

        // ===========================================
        // NOVO: Lógica para Geração e Exibição de QR Code de Login
        // ===========================================

        // Funções para abrir e fechar o modal do QR Code
        function abrirQrCodeModal() {
            document.getElementById('qrCodeModal').classList.remove('hidden');
            document.getElementById('qrCodeModal').classList.add('flex'); // Garante que flex seja aplicado
        }

        function fecharQrCodeModal() {
            document.getElementById('qrCodeModal').classList.remove('flex'); // Remove flex
            document.getElementById('qrCodeModal').classList.add('hidden'); // Adiciona hidden
            // Limpar o canvas ao fechar
            const canvas = document.getElementById('qrCodeCanvas');
            if (canvas) {
                const ctx = canvas.getContext('2d');
                ctx.clearRect(0, 0, canvas.width, canvas.height);
            }
        }

        // Lógica para gerar o QR Code ao clicar no botão
        const gerarQrBtns = document.querySelectorAll('.gerar-qr-btn');
        const qrCodeCanvas = document.getElementById('qrCodeCanvas');
        const qrCodeModal = document.getElementById('qrCodeModal');

        // Verifica se os elementos necessários existem antes de adicionar event listeners
        if (!qrCodeCanvas || !qrCodeModal) {
            console.error('Elementos do modal QR Code (canvas ou modal) não encontrados no DOM. Certifique-se de que o HTML está presente.');
            // Não retorna aqui, pois outras partes do script podem ser importantes
        }

        gerarQrBtns.forEach(button => {
            button.addEventListener('click', async (event) => {
                const avaliadorId = event.target.dataset.avaliadorId;

                // Altera o texto do botão para indicar carregamento
                const originalButtonText = event.target.textContent;
                event.target.textContent = 'Gerando...';
                event.target.disabled = true;

                try {
                    const response = await fetch(`/admin/avaliadores/${avaliadorId}/gerar-qr-token`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            // Se você usa CSRF tokens (como 'X-CSRF-Token'), inclua-o aqui se necessário:
                            // 'X-CSRF-Token': document.querySelector('meta[name="csrf-token"]').getAttribute('content')
                        }
                    });

                    const data = await await response.json(); // Removi um `await` extra aqui

                    if (data.success) {
                        const qrLoginUrl = data.qrLoginUrl;

                        // Configura o tamanho do canvas para o QR Code
                        qrCodeCanvas.width = 250; // Um pouco maior para melhor leitura
                        qrCodeCanvas.height = 250;

                        new QRious({
                            element: qrCodeCanvas,
                            value: qrLoginUrl,
                            size: 250, // Tamanho do QR Code
                            level: 'H' // Nível de correção de erro (H = High, para maior robustez)
                        });

                        abrirQrCodeModal();
                        
                    } else {
                        alert(`Erro ao gerar QR Code: ${data.message || 'Erro desconhecido.'}`);
                    }
                } catch (error) {
                    console.error('Erro na requisição de geração de QR Code:', error);
                    alert('Ocorreu um erro ao gerar o QR Code. Verifique o console para mais detalhes.');
                } finally {
                    // Restaura o texto e habilita o botão
                    event.target.textContent = originalButtonText;
                    event.target.disabled = false;
                }
            });
        });
        
        // Ajuste no botão de editar avaliador para usar `currentAvaliadorId`
        // Já feito na versão acima, apenas para referência.
        // document.querySelectorAll('.btn-editar-avaliador').forEach(button => {
        //     button.addEventListener('click', (event) => {
        //         const currentAvaliadorId = event.target.dataset.id; // Correctly get the ID
        //         formAvaliador.action = `/admin/avaliadores/${currentAvaliadorId}?_method=PUT`;
        //         // ... rest of the code ...
        //     });
        // });
    });
  </script>

</body>
</html>
<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Pré-Cadastro de Avaliador</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Google Sans', 'Roboto', Arial, sans-serif;
      background-color: #f8f9fa;
      color: #202124;
      line-height: 1.5;
      font-size: 14px;
    }

    .container {
      max-width: 768px;
      margin: 40px auto;
      background: white;
      border-radius: 8px;
      box-shadow: 0 1px 3px 0 rgba(60, 64, 67, 0.3);
      overflow: hidden;
    }

    .header {
      background: #673ab7;
      padding: 24px 24px 12px 24px;
      border-radius: 8px 8px 0 0;
    }

    .header h1 {
      color: white;
      font-size: 32px;
      font-weight: 400;
      margin-bottom: 8px;
      line-height: 1.2;
    }

    .header .subtitle {
      color: rgba(255, 255, 255, 0.9);
      font-size: 14px;
      margin-bottom: 16px;
    }

    .header h2 {
      color: white;
      font-size: 24px;
      font-weight: 400;
      margin-bottom: 8px;
    }

    .header .info {
      color: rgba(255, 255, 255, 0.8);
      font-size: 14px;
      margin-bottom: 4px;
    }

    .form-container {
      padding: 24px;
    }

    .message {
      background: #d4edda;
      color: #155724;
      border: 1px solid #c3e6cb;
      border-radius: 4px;
      padding: 12px 16px;
      margin-bottom: 24px;
      font-size: 14px;
    }

    .message.error {
      background: #f8d7da;
      color: #721c24;
      border-color: #f5c6cb;
    }

    .form-section {
      margin-bottom: 32px;
    }

    .form-group {
      margin-bottom: 24px;
    }

    .form-group label {
      display: block;
      font-size: 14px;
      font-weight: 400;
      color: #202124;
      margin-bottom: 8px;
    }

    .required {
      color: #d93025;
    }

    .form-control {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid #dadce0;
      border-radius: 4px;
      font-size: 16px;
      font-family: inherit;
      background: white;
      transition: border-color 0.2s ease;
    }

    .form-control:focus {
      outline: none;
      border-color: #1a73e8;
      box-shadow: 0 0 0 1px #1a73e8;
    }

    .form-control:hover:not(:focus) {
      border-color: #5f6368;
    }

    select.form-control {
      cursor: pointer;
      background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
      background-position: right 12px center;
      background-repeat: no-repeat;
      background-size: 16px;
      padding-right: 40px;
      appearance: none;
    }

    .no-extras {
      text-align: center;
      color: #5f6368;
      font-style: italic;
      padding: 40px 20px;
      background: #f8f9fa;
      border-radius: 4px;
      border: 1px dashed #dadce0;
    }

    .submit-container {
      margin-top: 32px;
      padding-top: 24px;
      border-top: 1px solid #e8eaed;
    }

    .submit-btn {
      background: #1a73e8;
      color: white;
      border: none;
      padding: 12px 24px;
      border-radius: 4px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 8px;
    }

    .submit-btn:hover {
      background: #1557b0;
      box-shadow: 0 1px 3px 0 rgba(60, 64, 67, 0.3);
    }

    .submit-btn:active {
      background: #1241a3;
    }

    .submit-btn:disabled {
      background: #dadce0;
      color: #5f6368;
      cursor: not-allowed;
    }

    .btn-loader {
      display: none;
      width: 16px;
      height: 16px;
      border: 2px solid transparent;
      border-top: 2px solid currentColor;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }

    .btn-loader.show {
      display: block;
    }

    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }

    .char-counter {
      font-size: 12px;
      color: #5f6368;
      text-align: right;
      margin-top: 4px;
    }

    .error-message {
      color: #d93025;
      font-size: 12px;
      margin-top: 4px;
      display: none;
    }

    .form-control.error {
      border-color: #d93025;
    }

    .form-control.error:focus {
      border-color: #d93025;
      box-shadow: 0 0 0 1px #d93025;
    }

    .success-animation {
      display: none;
      text-align: center;
      padding: 48px 24px;
    }

    .success-icon {
      width: 64px;
      height: 64px;
      background: #34a853;
      border-radius: 50%;
      display: inline-flex;
      align-items: center;
      justify-content: center;
      margin-bottom: 16px;
      color: white;
      font-size: 24px;
    }

    .success-animation h3 {
      font-size: 20px;
      font-weight: 400;
      margin-bottom: 8px;
      color: #202124;
    }

    .success-animation p {
      color: #5f6368;
      font-size: 14px;
    }

    /* Responsividade */
    @media (max-width: 768px) {
      .container {
        margin: 16px;
        border-radius: 0;
        box-shadow: none;
        border: 1px solid #dadce0;
      }

      .header {
        padding: 20px 16px 12px 16px;
        border-radius: 0;
      }

      .header h1 {
        font-size: 24px;
      }

      .header h2 {
        font-size: 20px;
      }

      .form-container {
        padding: 16px;
      }

      .form-control {
        font-size: 16px; /* Evita zoom no iOS */
      }
    }

    /* Melhorias de acessibilidade */
    .sr-only {
      position: absolute;
      width: 1px;
      height: 1px;
      padding: 0;
      margin: -1px;
      overflow: hidden;
      clip: rect(0, 0, 0, 0);
      white-space: nowrap;
      border: 0;
    }

    /* Estados de validação mais sutis */
    .form-control:valid:not(:placeholder-shown) {
      border-color: #34a853;
    }

    .form-control:invalid:not(:placeholder-shown) {
      border-color: #d93025;
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Pré-Cadastro de Avaliador</h1>
      <p class="subtitle">Preencha os dados abaixo para se cadastrar como avaliador</p>
      <h2><%= feira.nome %></h2>
      <p class="info">Escola: <%= escola?.nome || 'Não informada' %></p>
      <p class="info"><%= formatarData(feira.inicioFeira) %> à <%= formatarData(feira.fimFeira) %></p>
    </div>

    <div class="form-container">
      <% if (mensagem) { %>
        <div class="message">
          <%= mensagem %>
        </div>
      <% } %>

      <form id="preCadastroForm" action="/pre-cadastro/<%= feiraId %>" method="POST">
        <div class="form-section">
          <div class="form-group">
            <label for="nome">Nome <span class="required">*</span></label>
            <input type="text" id="nome" name="nome" required class="form-control" maxlength="100" autocomplete="name">
            <div class="error-message">Nome é obrigatório</div>
            <div class="char-counter"><span id="nomeCounter">0</span>/100</div>
          </div>

          <div class="form-group">
            <label for="email">Email <span class="required">*</span></label>
            <input type="email" id="email" name="email" required class="form-control" maxlength="100" autocomplete="email">
            <div class="error-message">Email válido é obrigatório</div>
            <div class="char-counter"><span id="emailCounter">0</span>/100</div>
          </div>

          <div class="form-group">
            <label for="telefone">Telefone</label>
            <input type="tel" id="telefone" name="telefone" class="form-control" maxlength="15" placeholder="(00) 00000-0000" autocomplete="tel">
            <div class="char-counter"><span id="telefoneCounter">0</span>/15</div>
          </div>
        </div>

        <!-- Campos extras configuráveis -->
        <% if (camposExtras && camposExtras.length > 0) { %>
          <div class="form-section">
            <% camposExtras.forEach(campo => { %>
              <div class="form-group">
                <label for="extra_<%= campo.label %>">
                  <%= campo.label %>
                  <% if (campo.obrigatorio) { %><span class="required">*</span><% } %>
                </label>

                <% if (campo.tipo === 'seleção' && campo.opcoes) {
                     const opcoes = campo.opcoes.split(',').map(op => op.trim());
                %>
                  <select id="extra_<%= campo.label %>" name="extras[<%= campo.label %>]"
                    class="form-control"
                    <%= campo.obrigatorio ? 'required' : '' %>>
                    <option value="">Selecione uma opção</option>
                    <% opcoes.forEach(op => { %>
                      <option value="<%= op %>"><%= op %></option>
                    <% }) %>
                  </select>
                <% } else if (campo.tipo === 'número') { %>
                  <input type="number"
                         id="extra_<%= campo.label %>"
                         name="extras[<%= campo.label %>]"
                         <%= campo.obrigatorio ? 'required' : '' %>
                         class="form-control">
                <% } else { %>
                  <input type="text"
                         id="extra_<%= campo.label %>"
                         name="extras[<%= campo.label %>]"
                         <%= campo.obrigatorio ? 'required' : '' %>
                         class="form-control">
                <% } %>
                <div class="error-message"><%= campo.label %> é obrigatório</div>
              </div>
            <% }) %>
          </div>
        <% } else { %>
          <div class="form-section">
            <p class="no-extras">Nenhum campo extra configurado para este formulário.</p>
          </div>
        <% } %>

        <div class="submit-container">
          <button type="submit" class="submit-btn" id="submitBtn">
            <span class="btn-loader"></span>
            <span class="btn-text">Enviar</span>
          </button>
        </div>
      </form>

      <!-- Animação de sucesso -->
      <div class="success-animation" id="successAnimation">
        <div class="success-icon">✓</div>
        <h3>Pré-cadastro enviado com sucesso!</h3>
        <p>Você receberá um email de confirmação em breve.</p>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const form = document.getElementById('preCadastroForm');
      const submitBtn = document.getElementById('submitBtn');
      const btnLoader = document.querySelector('.btn-loader');
      const btnText = document.querySelector('.btn-text');

      // Formatação automática para telefone
      const telefoneInput = document.getElementById('telefone');
      if (telefoneInput) {
        telefoneInput.addEventListener('input', function(e) {
          let value = e.target.value.replace(/\D/g, '');
          if (value.length <= 11) {
            value = value.replace(/(\d{2})(\d)/, '($1) $2');
            value = value.replace(/(\d{5})(\d)/, '$1-$2');
            e.target.value = value;
          }
        });
      }

      // Contadores de caracteres
      const inputs = ['nome', 'email', 'telefone'];
      inputs.forEach(inputId => {
        const input = document.getElementById(inputId);
        const counter = document.getElementById(inputId + 'Counter');
        if (input && counter) {
          input.addEventListener('input', function() {
            counter.textContent = this.value.length;
          });
        }
      });

      // Validação em tempo real
      const formInputs = form.querySelectorAll('input, select');
      formInputs.forEach(input => {
        input.addEventListener('blur', validateField);
        input.addEventListener('input', function() {
          if (this.classList.contains('error')) {
            validateField.call(this);
          }
        });
      });

      function validateField() {
        const formGroup = this.closest('.form-group');
        const errorMessage = formGroup.querySelector('.error-message');
        
        if (this.validity.valid && (this.value.trim() !== '' || !this.required)) {
          this.classList.remove('error');
          if (errorMessage) errorMessage.style.display = 'none';
        } else if (this.required && this.value.trim() === '') {
          this.classList.add('error');
          if (errorMessage) errorMessage.style.display = 'block';
        } else if (!this.validity.valid) {
          this.classList.add('error');
          if (errorMessage) errorMessage.style.display = 'block';
        }
      }

      // Submissão do formulário
      form.addEventListener('submit', function(e) {
        // Validar todos os campos
        let isValid = true;
        formInputs.forEach(input => {
          validateField.call(input);
          if (!input.validity.valid || (input.required && input.value.trim() === '')) {
            isValid = false;
          }
        });

        if (!isValid) {
          e.preventDefault();
          showMessage('Por favor, corrija os erros antes de enviar.', 'error');
          return;
        }

        // Mostrar loading
        submitBtn.disabled = true;
        btnLoader.classList.add('show');
        btnText.textContent = 'Enviando...';
      });

      function showMessage(message, type = 'error') {
        const existingMessage = document.querySelector('.message');
        if (!existingMessage) {
          const tempMessage = document.createElement('div');
          tempMessage.className = `message ${type}`;
          tempMessage.textContent = message;
          form.parentNode.insertBefore(tempMessage, form);
          
          setTimeout(() => {
            tempMessage.remove();
          }, 5000);
        }
      }

      // Navegação por teclado
      formInputs.forEach((input, index) => {
        input.addEventListener('keydown', function(e) {
          if (e.key === 'Enter' && this.tagName !== 'TEXTAREA') {
            e.preventDefault();
            const nextInput = formInputs[index + 1];
            if (nextInput) {
              nextInput.focus();
            } else {
              submitBtn.focus();
            }
          }
        });
      });
    });
  </script>
</body>
</html>